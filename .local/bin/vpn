#!/usr/bin/env bash

source "${HOME}"/.secrets

LOCKFILE="/tmp/_vpn.lock"

# Check is Lock File exists, if not create it and set trap on exit
 if { set -C; 2>/dev/null >"${LOCKFILE}"; }; then
         trap 'rm -f "${LOCKFILE}"' EXIT
 else
         echo "Lock file exists… exiting"
         exit
 fi

anyconnect=/opt/cisco/secureclient/bin/vpn
anyconnect_ui=/opt/cisco/secureclient/bin/vpnui
LABEL_ICON=


get_state () {
  $anyconnect state | grep state | head -2 | tail -1 | cut -d' ' -f 5
}

print_state () {
  state=$( get_state )
  ret=X
  case $state in
    "Connected")
      ret=
    ;;
    *)
      ret=X
    ;;
  esac
  echo $ret
}

connect_sweden () {
  $anyconnect -s connect $SE_VPN < <(echo -e "$sGID\n$(stoken)\nexit\n")
}

connect_uk () {
  $anyconnect -s connect $UK_VPN < <(echo -e "$sGID\n$(stoken)\nexit\n")
}

disconnect () {
  $anyconnect disconnect > /dev/null 2>&1
}

case $1 in
  "toggle")
    state=$( get_state )
    if [[ $state == "Connected" ]]; then
      disconnect
    else
      connect_sweden
    fi
  ;;
  "sweden")
    state=$( get_state )
    if [[ $state != "Connected" ]]; then
      connect_sweden
    fi
  ;;
  "uk")
    state=$( get_state )
    if [[ $state != "Connected" ]]; then
      connect_uk
    fi
  ;;
  "connect")
    state=$( get_state )
    if [[ $state != "Connected" ]]; then
      connect_uk
    fi
  ;;
  "disconnect")
    state=$( get_state )
    if [[ $state == "Connected" ]]; then
      disconnect
    fi
  ;;
  "reconnect")
    state=$( get_state )
    if [[ $state == "Connected" ]]; then
      disconnect
    fi
  connect
  ;;
  "ui")
    $anyconnect_ui
  ;;
  *)
  ;;
esac

if [ -t 0 ]
then
  get_state
else
  print_state
fi

# rm -f "${LOCKFILE}"

exit 0

